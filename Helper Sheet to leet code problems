**1. Target Sum in an Array **
* Which two elements guve the target sum ?
  Approaches -> Brute Force O(n^3)
             -> Optimize Brute force O(n^2)
             -> Two Pointer Method O(n) Needs Sorted array
             -> Hashing O(n) Works on ordered list 
             -> Remainder Hashing O(n+x)
 
**2. Maximum subarray**
* find the subarray with the largest sum, and return its sum
  Approaches -> Brute Force O(n^3)
             -> Optimized Brute Force O(n^3)
             -> Divide and conquer -> Merge Sort O(nlogn)
             -> Dynamic Programming T: O(n) S:O(n)
             -> Kandane's Algorithm T: O(n) S:O(1)
             
**2. Maximum subarray**
